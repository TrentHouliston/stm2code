{
  "LPTIM": [
    {
      "name": "ISR",
      "description": "interrupt and status register",
      "offset": "0x00",
      "fields": [
        {
          "name": "DOWN",
          "description": "Counter direction change up to down In Encoder mode, DOWN bit is set by hardware to inform application that the counter direction has changed from up to down. DOWN flag can be cleared by writing 1 to the DOWNCF bit in the LPTIM_ICR register. If the LPTIM does not support encoder mode fe ature, this bit is reserved. Please refer to Section 43.3: LPTIM implementation .",
          "values": [],
          "mask": "0b1000000"
        },
        {
          "name": "UP",
          "description": "Counter direction change down to up In Encoder mode, UP bit is set by hardware to inform application that the counter direction has changed from down to up. UP flag can be cleared by writing 1 to the UPCF bit in the LPTIM_ICR register. If the LPTIM does not support encoder mode fe ature, this bit is reserved. Please refer to Section 43.3: LPTIM implementation .",
          "values": [],
          "mask": "0b100000"
        },
        {
          "name": "ARROK",
          "description": "Autoreload register update OK ARROK is set by hardware to in form application t hat the APB bus write oper ation to the LPTIM_ARR register has been successfully completed. ARROK flag can be cleared by writing 1 to the ARROKCF bit in the LPTIM_ICR register.",
          "values": [],
          "mask": "0b10000"
        },
        {
          "name": "CMPOK",
          "description": "Compare register update OK CMPOK is set by hardware to inform applicat ion that the APB bus wr ite operation to the LPTIM_CMP register has been successfully complet ed. CMPOK flag can be cleared by writing 1 to the CMPOKCF bit in the LPTIM_ICR register.",
          "values": [],
          "mask": "0b1000"
        },
        {
          "name": "EXTTRIG",
          "description": "External trigger edge event EXTTRIG is set by hardware to inform application th at a valid edge on the selected external trigger input has occurred. If the trigger is ignored becaus e the timer has already st arted, then this flag is not set. EXTTRIG flag can be cleared by writing 1 to the EXTTRIGCF bit in the LPTIM_ICR register.",
          "values": [],
          "mask": "0b100"
        },
        {
          "name": "ARRM",
          "description": "Autoreload match ARRM is set by hardware to inform applicatio n that LPTIM_CNT register\u2019s value reached the LPTIM_ARR register\u2019s value. ARRM flag can be cleared by writing 1 to the ARRMCF bit in the LPTIM_ICR register.",
          "values": [],
          "mask": "0b10"
        },
        {
          "name": "CMPM",
          "description": "Compare match The CMPM bit is set by hardware to inform applic ation that LPTIM_CNT re gister value reached the LPTIM_CMP register\u2019s value. CMPM flag can be cl eared by writing 1 to the CMPMCF bit in the LPTIM_ICR register.",
          "values": [],
          "mask": "0b1"
        },
        {
          "name": "Reserved",
          "description": "must be kept at reset value.",
          "values": [],
          "mask": "0b11111111111111111111111110000000"
        }
      ]
    },
    {
      "name": "ICR",
      "description": "interrupt clear register",
      "offset": "0x04",
      "fields": [
        {
          "name": "DOWNCF",
          "description": "Direction change to down clear flag Writing 1 to this bit clear the DO WN flag in the LPTIM_ISR register. If the LPTIM does not support encoder mode fe ature, this bit is reserved. Please refer to Section 43.3: LPTIM implementation .",
          "values": [],
          "mask": "0b1000000"
        },
        {
          "name": "UPCF",
          "description": "Direction change to UP clear flag Writing 1 to this bit clear the UP flag in the LPTIM_ISR register. If the LPTIM does not support encoder mode fe ature, this bit is reserved. Please refer to Section 43.3: LPTIM implementation .",
          "values": [],
          "mask": "0b100000"
        },
        {
          "name": "ARROKCF",
          "description": "Autoreload register update OK clear flag Writing 1 to this bit clears the ARROK flag in the LPTIM_ISR register",
          "values": [],
          "mask": "0b10000"
        },
        {
          "name": "CMPOKCF",
          "description": "Compare register update OK clear flag Writing 1 to this bit clears the CMPOK flag in the LPTIM_ISR register",
          "values": [],
          "mask": "0b1000"
        },
        {
          "name": "EXTTRIGCF",
          "description": "External trigger valid edge clear flag Writing 1 to this bit clears the EXTTRIG flag in the LPTIM_ISR register",
          "values": [],
          "mask": "0b100"
        },
        {
          "name": "ARRMCF",
          "description": "Autoreload match clear flag Writing 1 to this bit clears the ARRM flag in the LPTIM_ISR register",
          "values": [],
          "mask": "0b10"
        },
        {
          "name": "CMPMCF",
          "description": "Compare match clear flag Writing 1 to this bit clears the CMPM flag in the LPTIM_ISR register",
          "values": [],
          "mask": "0b1"
        },
        {
          "name": "Reserved",
          "description": "must be kept at reset value.",
          "values": [],
          "mask": "0b11111111111111111111111110000000"
        }
      ]
    },
    {
      "name": "IER",
      "description": "interrupt enable register",
      "offset": "0x08",
      "fields": [
        {
          "name": "DOWNIE",
          "description": "Direction change to down Interrupt Enable If the LPTIM does not support encoder mode fe ature, this bit is reserved. Please refer to Section 43.3: LPTIM implementation .",
          "values": [
            ["0", "DOWN interrupt disabled"],
            ["1", "DOWN interrupt enabled"]
          ],
          "mask": "0b1000000"
        },
        {
          "name": "UPIE",
          "description": "Direction change to UP Interrupt Enable If the LPTIM does not support encoder mode fe ature, this bit is reserved. Please refer to Section 43.3: LPTIM implementation .",
          "values": [
            ["0", "UP interrupt disabled"],
            ["1", "UP interrupt enabled"]
          ],
          "mask": "0b100000"
        },
        {
          "name": "ARROKIE",
          "description": "Autoreload register update OK Interrupt Enable",
          "values": [
            ["0", "ARROK interrupt disabled"],
            ["1", "ARROK interrupt enabled"]
          ],
          "mask": "0b10000"
        },
        {
          "name": "CMPOKIE",
          "description": "Compare register update OK Interrupt Enable",
          "values": [
            ["0", "CMPOK interrupt disabled"],
            ["1", "CMPOK interrupt enabled"]
          ],
          "mask": "0b1000"
        },
        {
          "name": "EXTTRIGIE",
          "description": "External trigger valid edge Interrupt Enable",
          "values": [
            ["0", "EXTTRIG interrupt disabled"],
            ["1", "EXTTRIG interrupt enabled"]
          ],
          "mask": "0b100"
        },
        {
          "name": "ARRMIE",
          "description": "Autoreload match Interrupt Enable",
          "values": [
            ["0", "ARRM interrupt disabled"],
            ["1", "ARRM interrupt enabled"]
          ],
          "mask": "0b10"
        },
        {
          "name": "CMPMIE",
          "description": "Compare match Interrupt Enable",
          "values": [
            ["0", "CMPM interrupt disabled"],
            ["1", "CMPM interrupt enabled"]
          ],
          "mask": "0b1"
        }
      ]
    },
    {
      "name": "CFGR",
      "description": "configuration register",
      "offset": "0x0C",
      "fields": [
        {
          "name": "ENC",
          "description": "Encoder mode enable The ENC bit controls the Encoder mode If the LPTIM does not support encoder mode f eature, this bit is reserved. Please refer to Section 43.3: LPTIM implementation .",
          "values": [
            ["0", "Encoder mode disabled"],
            ["1", "Encoder mode enabled"]
          ],
          "mask": "0b1000000000000000000000000"
        },
        {
          "name": "COUNTMODE",
          "description": "counter mode enabled The COUNTMODE bit selects whic h clock source is used by the LPTIM to clock the counter:",
          "values": [
            ["0", "the counter is incremented following each internal clock pulse"],
            ["1", "the counter is incremented following each va lid clock pulse on the LPTIM external Input1"]
          ],
          "mask": "0b100000000000000000000000"
        },
        {
          "name": "PRELOAD",
          "description": "Registers update mode The PRELOAD bit controls the LPTIM_ARR and the LPTIM_CMP registers update modality",
          "values": [
            ["0", "Registers are updated after each APB bus write access"],
            ["1", "Registers are updated at the end of the current LPTIM period"]
          ],
          "mask": "0b10000000000000000000000"
        },
        {
          "name": "WAVPOL",
          "description": "Waveform shape polarity The WAVEPOL bit controls the output polarity",
          "values": [
            ["0", "The LPTIM output reflects the compare results between LPTIM_CNT and LPTIM_CMP registers"],
            ["1", "The LPTIM output reflects the inverse of the compare results between LPTIM_CNT and LPTIM_CMP registers"]
          ],
          "mask": "0b1000000000000000000000"
        },
        {
          "name": "WAVE",
          "description": "Waveform shape The WAVE bit controls the output shape",
          "values": [
            ["0", "Deactivate Set-once mode"],
            ["1", "Activate the Set-once mode"]
          ],
          "mask": "0b100000000000000000000"
        },
        {
          "name": "TIMOUT",
          "description": "Timeout enable The TIMOUT bit controls the Timeout feature",
          "values": [
            ["0", "A trigger event arriving when the timer is already started will be ignored"],
            ["1", "A trigger event arriving when the timer is already started will reset and restart the counter"]
          ],
          "mask": "0b10000000000000000000"
        },
        {
          "name": "TRIGEN",
          "description": "Trigger enable and polarity The TRIGEN bits controls whether the LPTIM counter is started by an external trigger or not. If the external trigger option is selected, three config urations are possible for the trigger active edge:",
          "values": [
            ["00", "software trigger (counting st art is initiated by software)"],
            ["01", "rising edge is the active edge"],
            ["10", "falling edge is the active edge"],
            ["11", "both edges are active edges"]
          ],
          "mask": "0b1100000000000000000"
        },
        {
          "name": "TRIGSEL",
          "description": "Trigger selector The TRIGSEL bits select the trigger source that will serve as a trigger event for the LPTIM among the below 8 available sources:",
          "values": [
            ["000", "lptim_ext_trig0"],
            ["001", "lptim_ext_trig1"],
            ["010", "lptim_ext_trig2"],
            ["011", "lptim_ext_trig3"],
            ["100", "lptim_ext_trig4"],
            ["101", "lptim_ext_trig5"],
            ["110", "lptim_ext_trig6"],
            ["111", "lptim_ext_trig7See Section 43.4.3: LPTIM input and trigger mapping for details."]
          ],
          "mask": "0b1110000000000000"
        },
        {
          "name": "PRESC",
          "description": "Clock prescaler The PRESC bits configure the prescaler division factor. It can be one among the following division factors:",
          "values": [
            ["000", "/1"],
            ["001", "/2"],
            ["010", "/4"],
            ["011", "/8"],
            ["100", "/16"],
            ["101", "/32"],
            ["110", "/64"],
            ["111", "/128"]
          ],
          "mask": "0b111000000000"
        },
        {
          "name": "TRGFLT",
          "description": "Configurable digital filter for trigger The TRGFLT value sets the number of consecutive equal samples that should be detected when a level change occurs on an internal trigger before it is considered as a valid level transition. An internal clock source must be present to use this feature",
          "values": [
            ["00", "any trigger active level change is considered as a valid trigger"],
            ["01", "trigger active level change must be stable for at least 2 clock periods before it is considered as valid trigger."],
            ["10", "trigger active level change must be stable for at least 4 clock periods before it is considered as valid trigger."],
            ["11", "trigger active level change must be stable for at least 8 clock periods before it is considered as valid trigger."]
          ],
          "mask": "0b11000000"
        },
        {
          "name": "CKPOL",
          "description": "Clock polarity If LPTIM is clocked by an external clock source: When the LPTIM is clocked by an external clock so urce, CKPOL bits is used to configure the active edge or edges used by the counter:",
          "values": [
            ["00", "the rising edge is the active edge used for counting.If the LPTIM is configured in Encoder mode (E NC bit is set), the encoder sub-mode 1 is active."],
            ["01", "the falling edge is the active edge used for countingIf the LPTIM is configured in Encoder mode (E NC bit is set), the encoder sub-mode 2 is active."],
            ["10", "both edges are active edges. When both external clock signal edges are considered active ones, the LPTIM must also be clocked by an internal clock source with a frequency equal to at least four times the external clock frequency.If the LPTIM is configured in Encoder mode (E NC bit is set), the encoder sub-mode 3 is active."],
            ["11", "not allowed Refer to Section 43.4.15: Encoder mode for more details about Encoder mode sub-modes."]
          ],
          "mask": "0b110"
        },
        {
          "name": "CKSEL",
          "description": "Clock selector The CKSEL bit selects which cl ock source the LPTIM will use:",
          "values": [
            ["0", "LPTIM is clocked by internal clock source (APB clock or any of the embedded oscillators)"],
            ["1", "LPTIM is clocked by an external clock source through the LPTIM external Input1"]
          ],
          "mask": "0b1"
        },
        {
          "name": "Reserved",
          "description": "must be kept at reset value.",
          "values": [],
          "mask": "0b111111110000000010001000010100000"
        }
      ]
    },
    {
      "name": "CR",
      "description": "control register",
      "offset": "0x10",
      "fields": [
        {
          "name": "4",
          "description": "331 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 Res. Res. Res. Res. Res. Res. Res. Res. Res. Res. Res. Res. Res. Res. Res. Res. 1 5 1 4 1 3 1 2 1 1 1 0 9876543210 Res. Res. Res. Res. Res. Res. Res. Res. Res. Res. Res.RST ARECOUN TRSTCNT STRTSNG STRTENA BLE wr s r w r w r w",
          "values": [],
          "mask": "0b0"
        },
        {
          "name": "RSTARE",
          "description": "Reset after read enable This bit is set and cleared by software. When RSTA RE is set to '1', any read access to LPTIM_CNT register will asynchronously reset LPTIM_CNT register content. This bit can be set only when the LPTIM is enabled.Caution: This bitfield is write-only. This means that the bit cannot be read back to verify the value which has been written. As an example, if this bi t is set to 1, attempting to read it back will return 0 even if the \"Reset after read\" function is enabled (due to the fact that this bitfield has previously been written to 1). To turn off t he \"Reset after read\" or to make sure that it has already been turned off, this bit should be reset (by programming it to 0) even if it already contains 0.",
          "values": [],
          "mask": "0b10000"
        },
        {
          "name": "COUNTRST",
          "description": "Counter reset This bit is set by software and cleared by hardware . When set to '1' this bit will trigger a synchronous reset of the LPTIM_CNT counter register. Due to t he synchronous nature of this reset, it only takes place after a synchronization delay of 3 LPTimer core clock cycles (LPTimer core clock may be different from APB clock). This bit can be set only when the LPTIM is enabled. It is automatically reset by hardware.Caution: COUNTRST must never be set to '1' by softwar e before it is already cleared to '0' by hardware. Software should consequently check that COUNTRST bit is already cleared to '0' before attempting to set it to '1'.",
          "values": [],
          "mask": "0b1000"
        },
        {
          "name": "CNTSTRT",
          "description": "Timer start in Continuous mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[",
          "values": [
            ["1", "0] = \u201800\u2019), setting this bit st arts the LPTIM in Continuous mode. If the software start is disabled (TRIGEN["],
            ["1", "0] different than \u201800\u2019), setting this bit starts the timer in Continuous mode as soon as an external trigger is detected. If this bit is set when a single pulse mode counting is ongoing, then the timer will not stop at the next match between the LPTIM_ARR and LPTIM_CNT re gisters and the LPTIM counter keeps counting in Continuous mode. This bit can be set only when the LPTIM is enabled. It will be automatically reset by hardware."]
          ],
          "mask": "0b100"
        },
        {
          "name": "SNGSTRT",
          "description": "LPTIM start in Single mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[",
          "values": [
            ["1", "0] = \u201800\u2019), setting this bit star ts the LPTIM in single pulse mode. If the software start is disabled (TRIGEN["],
            ["1", "0] different than \u201800\u2019), setting this bit starts the LPTIM in single pulse mode as soon as an external trigger is detected. If this bit is set when the LPTIM is in continuo us counting mode, then the LPTIM will stop at the following match between LPTIM_ARR and LPTIM_CNT registers. This bit can only be set when the LPTIM is enabled. It will be automatically reset by hardware."]
          ],
          "mask": "0b10"
        },
        {
          "name": "ENABLE",
          "description": "LPTIM enable The ENABLE bit is set and cleared by software.",
          "values": [
            ["0", "LPTIM is disabled"],
            ["1", "LPTIM is enabled"]
          ],
          "mask": "0b1"
        },
        {
          "name": "Reserved",
          "description": "must be kept at reset value.",
          "values": [],
          "mask": "0b11111111111111111111111111100000"
        }
      ]
    },
    {
      "name": "CMP",
      "description": "compare register",
      "offset": "0x14",
      "fields": [
        {
          "name": "CMP",
          "description": "Compare value CMP is the compare value used by the LPTIM.",
          "values": [],
          "mask": "0b1111111111111111"
        },
        {
          "name": "Reserved",
          "description": "must be kept at reset value.",
          "values": [],
          "mask": "0b11111111111111110000000000000000"
        }
      ]
    },
    {
      "name": "ARR",
      "description": "autoreload register",
      "offset": "0x18",
      "fields": [
        {
          "name": "ARR",
          "description": "Auto reload value ARR is the autoreload value for the LPTIM. This value must be strictly greater than the CMP[15:0] value.",
          "values": [],
          "mask": "0b1111111111111111"
        },
        {
          "name": "Reserved",
          "description": "must be kept at reset value.",
          "values": [],
          "mask": "0b11111111111111110000000000000000"
        }
      ]
    },
    {
      "name": "CNT",
      "description": "counter register",
      "offset": "0x1C",
      "fields": [
        {
          "name": "CNT",
          "description": "Counter value When the LPTIM is running with an asynchronous clock, reading the LPTIM_CNT register may return unreliable values. So in this case it is necessary to perform two consecutive read accesses and verify that the two returned values are identical. It should be noted that for a reliable LPTIM_CNT register read access, two consecutive read accesses must be performed and compared. A read access can be considered reliable when the values of the two consecutive read accesses are equal.",
          "values": [],
          "mask": "0b1111111111111111"
        },
        {
          "name": "Reserved",
          "description": "must be kept at reset value.",
          "values": [],
          "mask": "0b11111111111111110000000000000000"
        }
      ]
    },
    {
      "name": "CFGR2",
      "description": "configuration register 2",
      "offset": "0x24",
      "fields": [
        {
          "name": "IN2SEL",
          "description": "LPTIM input 2 selection The IN2SEL bits control the LPTIM Input 2 multiple xer, which connect LPTIM Input 2 to one of the available inputs. If the LPTIM does not support encoder mode feat ure, these bits are rese rved. Please refer to Section 43.3: LPTIM implementation .",
          "values": [
            ["00", "lptim_in2_mux0"],
            ["01", "lptim_in2_mux1"],
            ["10", "lptim_in2_mux2"],
            ["11", "lptim_in2_mux3For connection details refer to Section 43.4.3: LPTIM input and trigger mapping ."]
          ],
          "mask": "0b110000"
        },
        {
          "name": "Reserved",
          "description": "must be kept at reset value.",
          "values": [],
          "mask": "0b11111111111111111111111111001100"
        }
      ]
    }
  ]
}
